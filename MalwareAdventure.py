# Malware Adventure Game

from PAWS.Core import *      # Game Engine (already written for you)
from PAWS.Universe import *  # Game World Library (already written for you)
from wx.tools.Editra.src.syntax import make
from enthought import execution

#------------------ Game data (filled out for each new game) --------------------

Game.Author = "Parsia Hakimian"
Game.Copyright = "2013-infinity"
Game.Name = "Malware Adventure"
Game.Version = "0.1"
Game.IntroText = """
                 You were a prosperous grad student at Johns Hopkins.~n
                 Enjoying the free food and pizza. "Thinking" about stuff all day.~n
                 Deciding to write your thesis from tomorrow for 10th time this month. ~n
                 
                 One day an envelope arrives in the mail. ~n
                 There is a USB drive and a single sheet of paper inside. ~n
                 The paper says "README". ~n
                 
                 Being the awesome security person that you are, you decide to investigate it. ~n
                 But you plug it into your uber protected disk encrypted virtual machine. ~n
                 The USB stick is empty. But your computer feels sluggish. ~n
                 Suddenly the monitor goes dark and you a see flash. ~n
                 
                 When you wake up, you are in a dark cave. ~n
                 A sound says "I hope you were not snoozing during the paper presentations, because you need
                 all you know to get back". ~n
                 """
#-------------------------------- Game Setup ---------------------------------------

# Copied from game to game, just replace "Cloak" with your game's name and
# replace "Foyer" with your game's starting room.

def MalwareUserSetUpGame():
    Global.Production = FALSE
    P.AP().CurrentActor = Global.Player
    P.CA().StartingLocation = StartingRoom0

# Wrapup is always written by you, and optional. This is the final chance to
# print text to the screen just before the game ends.

def MalwarePostGameWrapUp():
        Say("~p *** You have Won. Back to the grad student life with you *** ~p ")

# Hook up your functions to the game engine. Replace "Cloak" with your game name.

Engine.UserSetUpGame = MalwareUserSetUpGame   # Always copy this line
Engine.PostGameWrapUp = MalwarePostGameWrapUp # Delete this if no game wrapup

#------------------------------ Room "Blueprints" -------------------------------

# Using blueprints will make more sense when you write bigger games, with one
# blueprint making dozens of different rooms, speeding development considerably.

class MakeRoom(ServiceDictDescription, ClassRoom):
    """Blueprint for all rooms in game."""
    def SetMyProperties(self):
        self.IsLit = TRUE
  
    def FeelDesc(self):
        return ClassRoom.FeelDesc(self)

class MakeDarkRoom(MakeRoom):
    """Blueprint for a dark room, based on a regular room."""
    def SetIsLit(self, LightStatus):
        """Change lighting in dark room."""
        self.IsLit = LightStatus
        return ""

#---------------------------- Thing "Blueprints" --------------------------------

# Things, like rooms, need blueprints. In bigger games you can use the same 
# blueprint to make many different things, saving you a LOT of effort.

class MakePickableItem(ClassItem):
    """Blueprint for items that you can pick up."""
    def SetMyProperties(self):
        self.Bulk = 1
        self.Weight = 1
    def Drop(self, Multiple=FALSE):
        """You can't drop items"""
        return Complain("This isn't the best place to leave this around")
      
class MakeStationaryItem(ClassItem):
    """Blueprint for interactable items."""
    """To make the stationary items unpickable"""
    def SetMyProperties(self):
        self.SetDesc("Take", "Why do you want to take it, you don't know where it has been.")
        self.Bulk = 200
        self.Weight = 200
        self.MaxBulk = 200
        self.MaxWeight = 200
    
#---------------------------------- Make Rooms ----------------------------------

#Room0
StartingRoom0 = MakeRoom()
StartingRoom0.NamePhrase = "The Adventure Begins"
StartingRoom0.SetDesc("L", """
                          You wake up in a cave, it's damp and gloomy. ~n
                          There is a door to the north, a message above it reads "Malware Adventure Awaits" ~n
                          """)


ColdBootRoom1 = MakeRoom()
ColdBootRoom1.NamePhrase = "The Cold Room"
ColdBootRoom1.SetDesc("L", """
                          The door behind you shuts with a loud bang. You suddenly feel cold. ~n
                          There are two laptops to the left. Named LaptopBasic and LaptopAdvanced. ~n
                          On the right, an OpenDesktop case is on the table along with a monitor. ~n
                          To the north, there is a door frozen shut.
                          """)


TelevisionRoom2 = MakeRoom()
TelevisionRoom2.NamePhrase = "A Troll and his Telly"
TelevisionRoom2.SetDesc("L", """
                            You see a gigantic troll sleeping on a chair in front of a 142" LCD. Sound of the door banging behind you wakes him up. ~n
                            ~b "So, you are the one who stole my electromagnethingamjig" ~b
                            troll yells and runs after you. ~n
                            You hide behind his television. You need to find out what he was watching before to make him go back to sleep. ~n
                            You see a SmartMeter on the wall. The TV guide is trollsized.
                             """)



HitchHikerRoom3 = MakeRoom()
HitchHikerRoom3.NamePhrase = "Deep Thought Room"
HitchHikerRoom3.SD("L", """
                        You are in front of a gigantic computer named Deep Thought. It looks at you with fading photo-electric eyes and asks you one question. ~n
                        ~b \"What is the answer to Life, Universe and Everything ?\" ~b
                        """)


HallsOfTheBlind4 = MakeRoom()
HallsOfTheBlind4.NamePhrase = "Halls Of The Blind"
HallsOfTheBlind4.SD("L", """
                        ~b I can see what you see not ~n
                        Vision milky, then eyes rot. ~n
                        When you turn, they will be gone, ~n
                        Whispering their hidden song. ~n
                        Then you see what cannot be ~n
                        Shadows move where light should be. ~n
                        Out of darkness, out of mind, ~n
                        Cast down into the Halls of the Blind. ~b ~n
                        
                         """)


BearCave5 = MakeRoom()
BearCave5.NamePhrase = "Bear Cave"
BearCave5.SD("L", """
                    ~b It seems like you have entered a bear's cave. ~n
                    A friendly looking bear is standing in front of you. ~n
                    There is a RogueMalware flying around in the cave. ~n
                    There is TheNet by the wall.
                  """)


RocketRoom6 = MakeRoom()
RocketRoom6.NamePhrase = "Rocket Room"
RocketRoom6.SD("L", """
                    ~b Post-modern bears, trolls with LCDs .. What is this ? ~n
                    You look around and see a closed door without a keyhole. ~n
                    Seems like you have to blow your way out using the RocketPipe.
                    """)


BotNetRoom7 = MakeRoom()
BotNetRoom7.NamePhrase = "The Walking Dead"
BotNetRoom7.SD("L", """
                    ~b Your rocket has blown a large hole in the wall. ~n
                    Entering the new room you see a horde of zombies approaching. ~n
                    Fortunately they move slowly, but you'd better do something. ~n
                    There is a Command and Control (CNCModule) on your left.
                    """)


TrojanRoom8 = MakeRoom()
TrojanRoom8.NamePhrase = "At The Gates"
TrojanRoom8.SD("L", """
                    ~b Phew, that was a close call with Zombies. Luckily you had not slept through the presentation. ~n
                    You can see a locked gate to the north. Two ancient soldiers are guarding it. ~n
                    They seem really serious, so you don't dare approach them. ~n
                    There should be a way to sneak past them.
                    """)

AntiVirusRoom9 = MakeRoom()
AntiVirusRoom9.NamePhrase = "Cleaning Facilities"
AntiVirusRoom9.SD("L", """
                       ~b The soldiers leave you in this room and go their own way. ~n 
                       After waiting for some time, you decide to crawl out of the horse. Way to experience mythology. ~n
                       The moment you step out, you see an AntiVirus coming your way very fast. ~n 
                       """)



ChromeRoom10 = MakeRoom()
ChromeRoom10.NamePhrase = "Your Metal Eye To Surf The Web"
ChromeRoom10.SD("L", """
                    ~b Dodging the AntiVirus was tricky. Luckily you had the rootkit in hand. ~n
                    This room is entirely made of some shiny metal. ~n
                    Can you tell me what the name of the room implies ? ~n
                    The door to north has the words "Extend Me" written on top of it. There is a hole in it. 
                     """)


WormRoom11 = MakeRoom()
WormRoom11.NamePhrase = "Stranger in a Strange Land"
WormRoom11.SD("L", """
                    ~b The door extended, you step into this room. ~n
                    There is a riddle written on top of the next door. ~n
                    
                    Blind I be, I travel fast. ~n
                    Restless I be, I leave souvernirs. ~n
                    If you follow my trail back through time, you will be shocked. ~n
                    I have a relative from Earth named Jim, for who I am mocked. ~n
                   """)


BreathRoom12 = MakeRoom()
BreathRoom12.NamePhrase = "Breathalyzer"
BreathRoom12.SD("L", """
                        ~b That was an exciting riddle, wasn't it ? ~n
                        While you are catching your breath, why don't we think about the main difference between a virus and a worm ? ~n
                        I did not give you a virus, who knows when the computer viruses can infect humans. ~n
                     """)


Room13 = MakeRoom()
Room13.NamePhrase = "Room 13"
Room13.SD("L", "~b This is Room 13. You'd better get out. Can you remember the new attack against DTLS ?")


TPMRoom14 = MakeRoom()
TPMRoom14.NamePhrase = "Trust Fund"
TPMRoom14.SD("L", """
                    ~b You were lucky to get out of 13th room alive. ~n
                    You see a TPM by the door. You have to complete it to open it. ~n 
                  """)


KeyRoom15 = MakeRoom()
KeyRoom15.NamePhrase = "Key Room"
KeyRoom15.SD("L", """
                    ~b You unofficially give yourself the title "TPM Assembler Extraordinair". ~n
                    Now you must answer a series of riddles and explain how. ~n
                    "One Key to rule them all". ~n
                    "My Birth Certificate". ~n
                    "By this you know me, yet you don't.". ~n
                    "Clad in shadows, I am sworn. I know who is who, yet where I am no one has a clue".
                  """)


LastRoom = MakeRoom()
LastRoom.NamePhrase = "Winning ROOM"
LastRoom.SetDesc("L", """
                      ~b Well , I hope you liked it. As a result you will be rewarded with your thesis. ~n
                      So you can finally graduate. Thesis in hand. You go back to life.
                      """)


NoWhereRoom = MakeRoom()
NoWhereRoom.NamePhrase = "NoWhere Room"
NoWhereRoom.SD("L", "You should not be able to get here")


#---------------------------------- Make Things ---------------------------------

# ColdBootRoom1 --------------------

# Airduster
Airduster = MakePickableItem("Airduster")
Airduster.StartingLocation = ColdBootRoom1
Airduster.Article = "an"    # make it say an Airduster in inventory
Airduster.SetDesc("L", 
                  """
                      This is an ordinary Airduster. ~n
                      It appears to be nearly empty, choose what to dust wisely.
                  """)
Airduster.SetDesc("Take","You take the Airduster")


# Frozen RAM Module
FrozenRAM = MakePickableItem("FrozenRAM")
FrozenRAM.StartingLocation = NoWhereRoom
FrozenRAM.SetDesc("L", "A FrozenRAM module, it feels cold in your pocket.")
FrozenRAM.SetDesc("Take", "You pick up a FrozenRAM module. It feels cold in your pocket.")

# Make Laptops
class MakeLaptopAdvanced(ServiceActivation, ClassShelf):
    def Enter(self, Object):
        """ cannot put stuff in it """
        if Object == Airduster: Complain("The RAM is frozen but you cannot take it. Think again !")
        return True

class MakeLaptopBasic(ServiceActivation, ClassShelf):
    """Laptop Basic"""
    def Enter(self, Object):
        if Object == Airduster: 
            Complain("Now you have a frozen RAM module")
            P.CA().Enter(FrozenRAM)
            return ClassShelf.Enter(self, Object)

# LaptopBasic
LaptopBasic = MakeLaptopBasic("LaptopBasic")
LaptopBasic.StartingLocation = ColdBootRoom1
LaptopBasic.SetDesc("L",
                """
                   This is an old laptop. ~n
                   It apprears to be running Bitlocker disk encryption in Basic mode. ~n
                   The RAM module is accessible.
                """)

# LaptopAdvanced
LaptopAdvanced = MakeLaptopAdvanced("LaptopAdvanced")
LaptopAdvanced.StartingLocation = ColdBootRoom1
LaptopAdvanced.SetDesc("L",
                """
                   This is an old laptop. ~n
                   It apprears to be running Bitlocker disk encryption in Advanced mode. ~n
                   The RAM module is accessible.
                """)

class MakeOpenDesktop(ServiceActivation, ClassShelf):
    """Blueprint for OpenDesktop"""
    def Enter(self, Object):
        if Object == FrozenRAM:
            Say("~b The frozen door has opened !!! ~b")
            # Global.GameState = FINISHED             # Finishing the game
            return ClassShelf.Enter(self, Object)

# OpenDesktop
OpenDesktop = MakeOpenDesktop("OpenDesktop")
OpenDesktop.StartingLocation = ColdBootRoom1
OpenDesktop.SetDesc("L", "This is an OpenDesktop computer case without RAM.")


# TelevisionRoom2 --------------------

StrangeObject = MakePickableItem("StrangeObject")
StrangeObject.StartingLocation = TelevisionRoom2
StrangeObject.SD("L", 
                 """
                 This strange object reminds you of something that you have seen before. ~n
                 Can you remember what it is ?
                 
                 """
                 )
StrangeObject.SD("Take",
                """
                This strange object reminds you of something that you have seen before. ~n
                Can you remember what it is ?
                """)

class MakeSmartMeter(ServiceActivation, ClassShelf):
    """Blueprint for SmartMeter"""
    def Enter(self, Object):
        if Object == StrangeObject:
            Say("The StrangeObject shows peak usage around 9pm troll time.")
            return ClassShelf.Enter(self, Object)

SmartMeter = MakeSmartMeter("SmartMeter")
SmartMeter.StartingLocation = TelevisionRoom2
SmartMeter.SetDesc("L", """
                        This is a Smart power meter. Who knew trolls were this sophisticated?
                        """)

TVguide = MakePickableItem("TVGuide")
TVguide.StartingLocation = TelevisionRoom2
TVguide.SD("L", "Troll Program Listing : ~n 8 pm  : Infomercial - Best way to fatten up your human ~n 9 pm  : Game of Trolls ~n 10 pm : 4chan Beginnings - Founding of a utopia")


class MakeTelevision(ServiceActivation, ClassShelf):
    """Blueprint for Television"""
    def Enter(self, Object):
        if Object == TVguide:
            Say("Channel is changed to \"Game of Trolls\". The Troll goes to sleep.")
            return ClassShelf.Enter(self, Object)

TrollVision = MakeTelevision("Television,TrollVision")
TrollVision.StartingLocation = TelevisionRoom2
TrollVision.SD("L", "This is \"Troll Vision 142 by Goblin Industries\".")


BoxOnTelly = MakeStationaryItem("BoxOnTelly")
BoxOnTelly.StartingLocation = TelevisionRoom2
BoxOnTelly.SD("L", "~b HBO !! You Know ~b")

# HitchHikerRoom3 --------------------

# The Book maker
class MakeTheBook(ServiceActivation, ClassShelf):
    """TheBook"""
    def Enter(self, Object):
        if Object == Airduster: 
            Complain("Now you have a frozen RAM module")
            Global.Player.Enter(FrozenRAM)
            return ClassShelf.Enter(self, Object)


# TheBook Object
TheBook = MakeTheBook("TheBook")
TheBook.StartingLocation = NoWhereRoom
TheBook.SD("L", "~b HitchHiker's Guide to the Galaxy ~b - The most practical guide written, period. ~n You can read the words \"Don't Panic\" on its cover, in large friendly letter. ")


# The Answer
TheAnswer = MakePickableItem("TheAnswer")
TheAnswer.StartingLocation = HitchHikerRoom3
TheAnswer.SD("L", "FortyTwo - It's the result of million years of calculation")
TheAnswer.SD("Take", "Upon picking up the answer, you feel like you have the burden of a million years of calculation in your pocket")


# HallsOfTheBlind4 ---------------------------


# Rootkit
Malware1 = MakePickableItem("Malware1")
Malware1.StartingLocation = HallsOfTheBlind4
Malware1.SD("L", "If you could see it, you would see a ~b Rootkit ~b")
Malware1.SD("Take" , "You pick up the Rootkit")


# BearCave5 -----------------------------

#Honey
Honey = MakePickableItem("Honey")
Honey.StartingLocation = NoWhereRoom
Honey.SD("L", "Honey given to you by the bear. It's sticky")

#HoneyNet
HoneyNet = MakePickableItem("HoneyNet")
HoneyNet.StartingLocation = NoWhereRoom
HoneyNet.SD("L", "It's a net covered with honey. What can you use a HoneyNet for ?")


class MakeTheNet(ServiceActivation, ClassShelf):
    """The Net"""
    def Enter(self, Object):
        if Object == Honey: 
            Say("You put honey on the net to make a sticky net. You pick up the resulting thing.")
            Global.Player.Enter(HoneyNet)
            return ClassShelf.Enter(self, Object)

#TheNet
TheNet = MakeTheNet("TheNet, Fishing Net")
TheNet.StartingLocation = BearCave5
TheNet.SD("L", "This is a normal fishing net. The bear says :\" I am a post modern bear, I use it to fish\". You wonder what kind of dream it is.")

#Spyware
Spyware = MakePickableItem("Spyware")
Spyware.StartingLocation = NoWhereRoom
Spyware.SD("L", "It's a Spyware. You feel it reading your mind.")



#FlyingMalware

class MakeFlyingMalware(ServiceActivation, ClassShelf):
    """Blueprint for FlyingMalware"""
    def Enter(self, Object):
        """Give Spyware to player when HoneyNet is used on it"""
        if Object == HoneyNet:
            Say("You have captured the FlyingMalware. Look into your inventory.")
            Global.Player.Enter(Spyware)
            self.MoveInto(None)
            return ClassShelf.Enter(self, Object)

FlyingMalware = MakeFlyingMalware("FlyingMalware")
FlyingMalware.StartingLocation = BearCave5
FlyingMalware.SD("L", "It's Malware flying around. How can you catch it ?")


# Make the Bear
class MakeMalwareActor(ClassActor):
    """Just like the regular actor, except it has the Alerted property."""
    def SetMyProperties(self):
        """Set additional properties for class."""

        self.Alerted = FALSE

class MakeBear(MakeMalwareActor):
    """
    This is our bear.
    """

    def Take(self,Multiple=FALSE):
        """What happens when the player tries to take the bear."""

        return Complain(self.TakeDesc())
        
    def ADesc(self): return "him"
    def FeelDesc(self):
        return """
               He doesn't look as though he'd appreciate your pawing
               him.
               """

    def HereDesc(self):
        return """
               A bear stands observing you. He is eating something.
               """

    def HelloDesc(self):
        """Response to 'Bear, hello.'"""

        # self.MoveInto(None)
        Global.Player.Enter(Honey)

        #--------------
        # Give the Clue
        #--------------

        return """
                The bear looks at you curiously and says: "If you can get rid of this FlyingMalware,
                I will open the door and you can continue your adventure".
                It gives you a pot of honey, saying : "To activate your brain.".
                Silly bear, little does he know that it is coffee that wakes my brain up every morning.
               """
    
    def LDesc(self):
        """Druid's long description."""

        Text = """
               A friendly looking brain, eating something.
               """
        
        return Text

    def TakeDesc(self):
        return """
               The bear strikes you suddenly, with enough force to
               knock you back. You aren't injured, but the warning is
               obvious.
               """
    def TheDesc(self): return "him"


TheBear = MakeBear("Bear")
TheBear.StartingLocation = BearCave5

# End of Bear ------


# RocketRoom6 -------------------------- 

Trigger = MakePickableItem("Trigger")
Trigger.StartingLocation = RocketRoom6
Trigger.SD("L", "What does a trigger do in a Malware ?")
Trigger.SD("Take", "You pick up the trigger.")


Payload = MakePickableItem("Payload")
Payload.StartingLocation = RocketRoom6
Payload.SD("L", "What is a Malware Payload?")
Payload.SD("Take", "You pick up the payload, you are afraid that it will blow up. Why are you sure that it won't blow up by itself ?")


# Make Rocket Pipe 
class MakeRocketPipe(ServiceActivation, ClassShelf):
    """Blueprint for RocketPipe"""
    def Enter(self, Object):
        """Give Spyware to player when HoneyNet is used on it"""
        if Object == Trigger:
            Say("You have added the trigger to the rocket pipe.")
            self.SD("L", "The rocket pipe has a trigger now.")
            return ClassShelf.Enter(self, Object)
        
        if Object == Payload:
            if (Trigger in self.Contents):
                Say("You have added the payload to the rocket pipe.")
                self.SD("L","The rocket has a trigger and payload. It is ready !")
                return ClassShelf.Enter(self, Object)
            else:
                Say("You need to add something before the payload, look around.")
                
RocketPipe = MakeRocketPipe("RocketPipe")
RocketPipe.StartingLocation = RocketRoom6
RocketPipe.SD("L", "This is an empty rocket pipe. Maybe you can blow the door with it.")
RocketPipe.SD("Take", "The rocket blows the door. Yay. Another victory for Infosec.")
RocketPipe.MaxBulk = 100
RocketPipe.MaxWeight = 100

# BotNetRoom7 -----------------------

CNCModule = MakePickableItem("CNCModule")
CNCModule.StartingLocation = BotNetRoom7
CNCModule.SD("L", "You can use this to control the zombies, but can you name the two different ways to control BotNets ?")


# TrojanRoom8 ---------------------------

TheHorse = MakeStationaryItem("Horse")
TheHorse.StartingLocation = TrojanRoom8
TheHorse.SD("Hide", "You hide inside the horse. The soldiers come and bring the horse inside the gate. ~n Can you name what Malware does this?")
TheHorse.SD("L", "It's a wooden horse. You tap on it and it seems like it is hollow. Are you of Greek heritage?")


# AntiVirusRoom9 -------------------------

class MakeAntiVirus(ServiceActivation, ClassShelf):
    """Blueprint for AntiVirus"""
    def Enter(self, Object):
        if Object == Malware1:
            Say("Yes, a Rootkit makes you invisible. The AntiVirus ignores you and you can go to the next room.")
            return ClassShelf.Enter(self, Object)

AntiVirus = MakeAntiVirus("AntiVirus")
AntiVirus.StartingLocation = AntiVirusRoom9
AntiVirus.SD("L", """
                 {Choose (Malware1 in Self().Contents, "The AntiVirus cannot see you anymore" , "It's an AntiVirus coming fast to get you, hide")}
                  """ )


# ChromeRoom10 -----------------------

Manifest = MakePickableItem("Manifest")
Manifest.StartingLocation = ChromeRoom10
Manifest.SD("L", "Looks like a normal chrome manifest. Can you tell me its format and why it cannot be used in an android program?")
Manifest.SD("Take", "You pickup the manifest. You have the urge to call Jason.")

ContentScript = MakePickableItem("ContentScript")
ContentScript.StartingLocation = ChromeRoom10
ContentScript.SD("L", "ContentScript. Why can't I attach it to the history ?")
ContentScript.SD("Take", "You pickup a content script.")

CoreExtension = MakePickableItem("CoreExtension")
CoreExtension.StartingLocation = ChromeRoom10
CoreExtension.SD("L", "It's a CoreExtension. Why can't I use it to communicate the website ?")
CoreExtension.SD("Take", "You pickup a core extension.")


class MakeChromeExtension(ServiceActivation, ClassShelf):
    """Blueprint for ChromeExtension"""
    def Enter(self, Object):
        if Object == Manifest:
            Say("You put the manifest inside the extension.")
            return ClassShelf.Enter(self, Object)
        if Object == CoreExtension:
            if ( Manifest in self.Contents ):
                Say ("You add the core extension.")
                return ClassShelf.Enter(self, Object)
            else:
                Say ("Something is missing before you can add the core extension. What part should every extension have ?")
        if Object == ContentScript:
            if ( Manifest in self.Contents ):
                if ( ContentScript in self.Contents):
                    Say ("You add the content script to the extension. It looks complete. The door opens. You can add chrome extensions to your resume now.")
                    return ClassShelf.Enter(self, Object)
                else:
                    Say("You have the manifest inside, but something else is missing before you can add the content script.")
            else:
                Say ("Something is missing before you can add the content script. What part should every extension have ?")                


ChromeExtension = MakeChromeExtension("ChromeExtension")
ChromeExtension.StartingLocation = ChromeRoom10
ChromeExtension.SD("L", "This is an extension of the Chrome door. There seems to be 3 slots in it.")
ChromeExtension.MaxBulk = 100
ChromeExtension.MaxWeight = 100

# WormRoom11 -----------------------

Malware2 = MakePickableItem("Malware2")
Malware2.StartingLocation = WormRoom11
Malware2.SD("L", "It's a worm, you name him Jim for old times sake. Did you know the creator of Neverhood and Earthworm Jim is making a new game ?")

# WormRoom12 ----------------------

# Room13 --------------------------

# TPMRoom14 -----------------------

CryptoProcessor = MakePickableItem("CryptoProcessor")
CryptoProcessor.StartingLocation = TPMRoom14
CryptoProcessor.SD("L", "Why does this have limited crypto capabilities ?")
CryptoProcessor.SD("Take", "Why does this have limited crypto capabilities ?")

ExecutionUnit = MakePickableItem("ExecutionUnit")
ExecutionUnit.StartingLocation = TPMRoom14
ExecutionUnit.SD("L", "What does this do in TPM ?")
ExecutionUnit.SD("Take", "What does this do in TPM ?")

RNG = MakePickableItem("RNG, RandomNumberGenerator")
RNG.StartingLocation = TPMRoom14
RNG.SD("L", "How good should this RNG be ? Will you trust it ?")
RNG.SD("Take", "How good should this RNG be ? Will you trust it ?")

VolatileMemory = MakePickableItem("VolativeMemory")
VolatileMemory.StartingLocation = TPMRoom14
VolatileMemory.SD("L", "What are the three key components of this unit?")
VolatileMemory.SD("Take", "What are the three key components of this unit?")

NVRAM = MakePickableItem("NVRAM")
NVRAM.StartingLocation = TPMRoom14
NVRAM.SD("L", "How big is this NVRAM ?")
NVRAM.SD("Take", "How big is this NVRAM ?")

class MakeTPM(ServiceActivation, ClassShelf):
    """Blueprint for ChromeExtension"""
    def Enter(self, Object):
            return ClassShelf.Enter(self, Object)


TPM = MakeTPM("TPM")
TPM.StartingLocation = TPMRoom14
TPM.SD("L", "This is a TPM, complete it to open the door.")
TPM.MaxBulk = 200
TPM.MaxWeight = 200

#--------------------------- Maps (Always Defined Last!) ------------------------

StartingRoom0.Map = {North : ColdBootRoom1}

ColdBootRoom1.Map = {North : TelevisionRoom2}

TelevisionRoom2.Map = {North : HitchHikerRoom3}

HitchHikerRoom3.Map = {North : HallsOfTheBlind4}

HallsOfTheBlind4.Map = {North : BearCave5}

BearCave5.Map = {North : RocketRoom6}

RocketRoom6.Map = {North : BotNetRoom7}

BotNetRoom7.Map = {North : TrojanRoom8}

TrojanRoom8.Map = {North : AntiVirusRoom9}

AntiVirusRoom9.Map = {North : ChromeRoom10}

ChromeRoom10.Map = {North : WormRoom11}

WormRoom11.Map = {North : BreathRoom12}

BreathRoom12.Map = {North : Room13}

Room13.Map = {North : TPMRoom14}

TPMRoom14.Map = {North : KeyRoom15}

KeyRoom15.Map = {North : LastRoom}

NoWhereRoom.Map = {}